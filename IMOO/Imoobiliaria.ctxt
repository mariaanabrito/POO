#BlueJ class context
comment0.params=
comment0.target=Imoobiliaria()
comment0.text=\n\ Constr\u00F3i\ uma\ inst\u00E2ncia\ de\ Imobiliaria\n
comment1.params=comp\ vend\ c\ v\ u\ l\ log\ quantos
comment1.target=Imoobiliaria(java.util.List,\ java.util.List,\ Comprador,\ Vendedor,\ Utilizador,\ java.util.Map,\ int,\ int)
comment1.text=\n\ Construtor\ por\ par\u00E2metro\n
comment10.params=
comment10.target=int\ getLog()
comment10.text=\n\ Retorna\ o\ tipo\ de\ login.\n
comment11.params=
comment11.target=int\ calculaQuantos()
comment11.text=\n\ Determina\ o\ n\u00FAmero\ total\ de\ im\u00F3veis\ registados\ no\ sistema\n
comment12.params=email\ password
comment12.target=void\ iniciaSessao(java.lang.String,\ java.lang.String)
comment12.text=\n\ M\u00E9todo\ que\ permite\ iniciar\ a\ sess\u00E3o\ na\ imobili\u00E1ria.\ Se\ n\u00E3o\ tiver\ autoriza\u00E7\u00E3o\ atira\ um\ exce\u00E7\u00E3o\n
comment13.params=
comment13.target=void\ fechaSessao()
comment13.text=\n\ M\u00E9todo\ que\ permite\ a\ um\ utilizador\ fechar\ sess\u00E3o\n
comment14.params=utilizador
comment14.target=void\ registarUtilizador(Utilizador)
comment14.text=\n\ Fun\u00E7\u00E3o\ que\ regista\ um\ utilizador\ na\ imobili\u00E1ria,\ sendo\ ele\ comprador\ ou\ vendedor.\n\ Atira\ uma\ exce\u00E7\u00E3o\ se\ o\ utilizador\ j\u00E1\ existir.\n
comment15.params=im
comment15.target=void\ registaImovel(Imovel)
comment15.text=\n\ M\u00E9todo\ que\ permite\ adicionar\ um\ im\u00F3vel\ \u00E0\ imobili\u00E1ria.\n\ Atira\ uma\ exce\u00E7\u00E3o\ se\ o\ im\u00F3vel\ j\u00E1\ existir,\ ou\ se\ n\u00E3o\ tiver\ permiss\u00E3o\ para\ o\ adicionar.\ \n
comment16.params=idImovel\ estado
comment16.target=void\ setEstado(java.lang.String,\ java.lang.String)
comment16.text=\n\ M\u00E9todo\ que\ modifica\ o\ estado\ de\ um\ im\u00F3vel.\n\ Atira\ uma\ exce\u00E7\u00E3o\ se\ o\ estado\ a\ inserir\ for\ v\u00E1lido,\ ou\ se\ o\ utilizador\ n\u00E3o\ tiver\ autoriza\u00E7\u00E3o\ para\ modificar\ o\ estado.\n
comment17.params=
comment17.target=java.util.Map\ getMapeamentoImoveis()
comment17.text=\n\ M\u00E9todo\ que\ obt\u00E9m\ o\ mapeamento\ entre\ todos\ os\ im\u00F3veis\ da\ imobili\u00E1ria.\n
comment18.params=preco
comment18.target=java.util.List\ getHabitaveis(int)
comment18.text=\n\ M\u00E9todo\ que\ devolve\ uma\ lista\ com\ todos\ os\ im\u00F3veis\ habit\u00E1veis.\n
comment19.params=classe\ preco
comment19.target=java.util.List\ getImovel(java.lang.String,\ int)
comment19.text=\n\ M\u00E9todo\ que\ obt\u00E9m\ uma\ lista\ com\ todos\ os\ im\u00F3veis\ correspondentes\ a\ um\ determinado\ tipo(exemplo\:\ moradia,\ terreno).\n
comment2.params=imo
comment2.target=Imoobiliaria(Imoobiliaria)
comment2.text=\n\ Construtor\ de\ c\u00F3pia\n
comment20.params=idImovel
comment20.target=void\ setFavorito(java.lang.String)
comment20.text=\n\ M\u00E9todo\ que\ adiciona\ um\ im\u00F3vel\ aos\ seus\ im\u00F3veis\ favoritos.\n\ Atira\ uma\ exce\u00E7\u00E3o\ se\ o\ im\u00F3vel\ n\u00E3o\ existe,\ ou\ se\ o\ utilizador\ n\u00E3o\ tiver\ permiss\u00E3o\ para\ o\ adicionar.\n
comment21.params=
comment21.target=java.util.TreeSet\ getFavoritos()
comment21.text=\n\ M\u00E9todo\ que\ obt\u00E9m\ os\ im\u00F3veis\ favoritos\ do\ comprador.\n\ Atira\ uma\ exce\u00E7\u00E3o\ se\ o\ utilizador\ n\u00E3o\ tiver\ permiss\u00E3o\ para\ os\ aceder.\n
comment22.params=
comment22.target=java.lang.String\ toString()
comment22.text=\n\ Devolve\ uma\ representa\u00E7\u00E3o\ no\ formato\ textual\n
comment23.params=o
comment23.target=boolean\ equals(java.lang.Object)
comment23.text=\n\ Compara\ a\ igualdade\ entre\ dois\ objetos\n
comment24.params=
comment24.target=Imoobiliaria\ clone()
comment24.text=\n\ Devolve\ uma\ c\u00F3pia\ desta\ inst\u00E2ncia\n
comment25.params=fich
comment25.target=void\ gravaObj(java.lang.String)
comment25.text=\n\ M\u00E9todo\ que\ escreve\ o\ objeto\ num\ ficheiro.\n\ Atira\ uma\ exce\u00E7\u00E3o\ em\ casa\ de\ erro\ IO.\n
comment26.params=ficheiro
comment26.target=Imoobiliaria\ leObjeto(java.lang.String)
comment26.text=\n\ M\u00E9todo\ que\ l\u00EA\ o\ objeto\ dum\ ficheiro.\n\ Atira\ uma\ exce\u00E7\u00E3o\ em\ caso\ de\ erro\ IO.\n
comment27.params=ficheiro\ ap
comment27.target=void\ log(java.lang.String,\ boolean)
comment27.text=\n\ M\u00E9todo\ que\ escreve\ num\ ficheiro\ o\ estado\ da\ classe\ sempre\ que\ se\ terminou\ do\ programa.\n\ Atira\ uma\ exce\u00E7\u00E3o\ em\ casa\ de\ erro\ IO.\n
comment28.params=ls
comment28.target=void\ atualizaConsultasgetImovel(java.util.List)
comment28.text=\n\ M\u00E9todo\ que\ atualiza\ as\ consultas\ com\ os\ im\u00F3veis\ consultados\ no\ m\u00E9todo\ getImovel\n
comment29.params=ls
comment29.target=void\ atualizaConsultasgetHabitaveis(java.util.List)
comment29.text=\n\ M\u00E9todo\ que\ atualiza\ as\ consultas\ com\ os\ im\u00F3veis\ consultados\ no\ m\u00E9todo\ getHabitaveis\n
comment3.params=
comment3.target=int\ getQuantos()
comment3.text=\n\ Retorna\ o\ n\u00FAmero\ total\ de\ im\u00F3veis\ no\ sistema\n
comment30.params=ls
comment30.target=java.util.TreeSet\ atualizaConsultasgetFavoritos(java.util.TreeSet)
comment30.text=\n\ M\u00E9todo\ que\ atualiza\ as\ consultas\ com\ os\ im\u00F3veis\ consultados\ no\ m\u00E9todo\ getFavoritos\n
comment31.params=ls
comment31.target=void\ atualizaConsultasMapeamento(java.util.Map)
comment31.text=\n\ M\u00E9todo\ que\ atualiza\ as\ consultas\ com\ os\ im\u00F3veis\ consultados\ no\ m\u00E9todo\ getConsultasMapeamento\n
comment32.params=lc\ c
comment32.target=boolean\ naoAparece(java.util.ArrayList,\ Consulta)
comment32.text=\n\ M\u00E9todo\ que\ retorna\ se\ uma\ dada\ consulta\ existe\ numa\ lista\ de\ consultas\n
comment33.params=
comment33.target=java.util.List\ getConsultas()
comment33.text=\n\ M\u00E9todo\ que\ obt\u00E9m\ as\ \u00FAltimas\ dez\ consultas\ dos\ im\u00F3veis\ que\ o\ vendedor\ tem\ para\ venda.\n\ Atira\ uma\ exce\u00E7\u00E3o\ se\ o\ utilizador\ n\u00E3o\ tiver\ permiss\u00E3o\ para\ o\ fazer.\n
comment34.params=id\ mail
comment34.target=boolean\ existeVendedordoImovel(java.lang.String,\ java.lang.String)
comment34.text=\n\ M\u00E9todo\ que\ verifica\ se\ um\ dado\ vendedor\ possui\ um\ dado\ im\u00F3vel\ \u00E0\ venda\n
comment35.params=n
comment35.target=java.util.Set\ getTopImoveis(int)
comment35.text=\n\ M\u00E9todo\ que\ obt\u00E9m\ os\ im\u00F3veis\ com\ mais\ n\ consultas,\ sendo\ n\ um\ par\u00E2metro\ passado\ pelo\ utilizador.\n
comment4.params=
comment4.target=java.util.List\ getImoCompradores()
comment4.text=\n\ Retorna\ a\ lista\ de\ compradores\n
comment5.params=
comment5.target=java.util.List\ getImoVendedores()
comment5.text=\n\ Retorna\ a\ lista\ de\ vendedores\n
comment6.params=
comment6.target=Comprador\ getComprador()
comment6.text=\n\ Retorna\ o\ comprador\n
comment7.params=
comment7.target=Vendedor\ getVendedor()
comment7.text=\n\ Retorna\ o\ vendedor\n
comment8.params=
comment8.target=Utilizador\ getUtilizador()
comment8.text=\n\ Retorna\ o\ utilizador\n
comment9.params=
comment9.target=java.util.Map\ getListaConsultas()
comment9.text=\n\ Retorna\ o\ mapeamento\ entre\ uma\ consulta\ e\ um\ contador\n
numComments=36
